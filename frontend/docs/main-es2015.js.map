{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/add-subscription/add-subscription.component.html","./src/app/account/admin/admin.component.html","./src/app/account/authorization/authorization.component.html","./src/app/account/billingaccount/billingaccount.component.html","./src/app/account/information/information.component.html","./src/app/account/management-subscription/management-subscription.component.html","./src/app/account/management-users/management-users.component.html","./src/app/account/nav-bar/nav-bar.component.html","./src/app/account/register/register.component.html","./src/app/account/server-error/server-error.component.html","./src/app/account/subscription/subscription.component.html","./src/app/account/view-all-subscriptions/view-all-subscriptions.component.html","./src/app/account/view-subscription-admin/view-subscription-admin.component.html","./src/app/app.component.html","./node_modules/tslib/tslib.es6.js","./src/app/HttpService.ts","./src/app/account/account.module.ts","./src/app/account/add-subscription/add-subscription.component.css","./src/app/account/add-subscription/add-subscription.component.ts","./src/app/account/admin/admin.component.css","./src/app/account/admin/admin.component.ts","./src/app/account/auth.service.ts","./src/app/account/authorization/authorization.component.css","./src/app/account/authorization/authorization.component.ts","./src/app/account/billingaccount/billingaccount.component.css","./src/app/account/billingaccount/billingaccount.component.ts","./src/app/account/information/information.component.css","./src/app/account/information/information.component.ts","./src/app/account/management-subscription/management-subscription.component.css","./src/app/account/management-subscription/management-subscription.component.ts","./src/app/account/management-users/management-users.component.css","./src/app/account/management-users/management-users.component.ts","./src/app/account/nav-bar/nav-bar.component.css","./src/app/account/nav-bar/nav-bar.component.ts","./src/app/account/register/register.component.css","./src/app/account/register/register.component.ts","./src/app/account/server-error/server-error.component.css","./src/app/account/server-error/server-error.component.ts","./src/app/account/subscription/subscription.component.css","./src/app/account/subscription/subscription.component.ts","./src/app/account/view-all-subscriptions/view-all-subscriptions.component.css","./src/app/account/view-all-subscriptions/view-all-subscriptions.component.ts","./src/app/account/view-subscription-admin/view-subscription-admin.component.css","./src/app/account/view-subscription-admin/view-subscription-admin.component.ts","./src/app/app.component.ts","./src/app/app.interceptor.ts","./src/app/app.module.ts","./src/app/chargingFirst.guard.ts","./src/app/model/Subscriptions.ts","./src/app/model/Users.ts","./src/app/model/model.module.ts","./src/app/model/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,8cAA+Y,qiE;;;;;;;;;;;;ACA9Z;AAAe,u6BAAw2B,6CAA6C,qCAAqC,mCAAmC,eAAe,8DAA8D,4BAA4B,wFAAwF,gCAAgC,4FAA4F,iBAAiB,uvBAAuvB,KAAK,4MAA4M,KAAK,qdAAqd,cAAc,kqBAAkqB,MAAM,kY;;;;;;;;;;;;ACAl5G;AAAe,29BAA45B,2nC;;;;;;;;;;;;ACA36B;AAAe,8aAA+W,qCAAqC,qHAAqH,iCAAiC,spC;;;;;;;;;;;;ACAzjB;AAAe,y0BAA0wB,gBAAgB,uIAAuI,iBAAiB,2IAA2I,iCAAiC,kU;;;;;;;;;;;;ACA7mC;AAAe,qhCAAs9B,eAAe,0d;;;;;;;;;;;;ACAp/B;AAAe,wJAAyF,2BAA2B,8B;;;;;;;;;;;;ACAnI;AAAe,oMAAqI,YAAY,8J;;;;;;;;;;;;ACAhK;AAAe,goBAAikB,wyCAAwyC,WAAW,0sG;;;;;;;;;;;;ACAn4D;AAAe,kMAAmI,WAAW,6B;;;;;;;;;;;;ACA7J;AAAe,0jCAA2/B,6CAA6C,uCAAuC,+BAA+B,cAAc,uLAAuL,4BAA4B,yFAAyF,cAAc,iCAAiC,gBAAgB,yiBAAyiB,gBAAgB,snBAAsnB,MAAM,4E;;;;;;;;;;;;ACA3qF;AAAe,+wBAAgtB,yCAAyC,uCAAuC,uDAAuD,cAAc,qDAAqD,cAAc,ubAAub,MAAM,oF;;;;;;;;;;;;ACAp3C;AAAe,wrBAAynB,yCAAyC,uCAAuC,2BAA2B,cAAc,oRAAoR,cAAc,kVAAkV,gBAAgB,6sBAA6sB,MAAM,wM;;;;;;;;;;;;ACAxlE;AAAe,oG;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;;;;;;;ACnMyC;AACO;AAKhD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;CACF;;YANiC,+DAAU;;AAF/B,WAAW;IADvB,gEAAU,EAAE;GACA,WAAW,CAQvB;AARuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACM;AACW;AACQ;AACY;AACH;AACvB;AAC6B;AACG;AAC3B;AACV;AAC+D;AAChD;AACM;AACuB;AACoB;AACpB;AACiB;AACxD;AAC2B;AAkB7E,IAAa,aAAa,GAA1B,MAAa,aAAa;CACzB;AADY,aAAa;IAfzB,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,uEAAa;YACb,0DAAW;YACX,+DAAW;YACX,6DAAY;YACZ,kEAAmB;YACnB,kEAAc;SACjB;QACH,YAAY,EAAE,CAAC,0FAAqB,EAAE,uFAAoB,EAAE,6FAAsB,EAAE,gGAAuB;YACzG,sEAAc,EAAE,2HAA+B,EAAE,2EAAe,EAAE,+EAAiB,EAAE,sGAAwB,EAAE,0HAA8B,EAAE,sGAAwB,EAAE,uHAA6B,EAAE,0FAAoB,CAAC;QAC/N,OAAO,EAAE,CAAC,0FAAqB,EAAE,uFAAoB,EAAE,6FAAsB;YAC3E,gGAAuB,CAAC;KAC3B,CAAC;GACW,aAAa,CACzB;AADyB;;;;;;;;;;;;;ACrC1B;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;ACAX;AACgB;AACb;AAOrD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAInC,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAE5B,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAE3D,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;YAbiC,+DAAW;;AAJhC,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,4PAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAiBpC;AAjBoC;;;;;;;;;;;;;ACTrC;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;ACAF;AACN;AAEnB;AAOlC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAavB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAX3C,kBAAa,GAAG,eAAe,CAAC;QAEhC,iBAAY,GAAiB,IAAI,iDAAY,EAAE,CAAC;QAEhD,SAAI,GAAG,CAAC,CAAC;QACT,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,CAAC,CAAC;QACjB,UAAK,GAAY,KAAK,CAAC;IAKvB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAED,IAAI,KAAK;QACL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,EAC/E,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,KAAc,EAAE,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QAER,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACxE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CACJ,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;YAClD,OAAO,QAAQ,CAAC;SACnB;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAC;YACvD,OAAO,SAAS,CAAC;SACpB;aAAM;YACH,OAAO,OAAO;SACjB;IACL,CAAC;IAED,WAAW,CAAC,EAAU;QAElB,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;YAC3D,OAAO,+BAA+B,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAC;YACjE,OAAO,8BAA8B,CAAC;SACzC;aAAM;YACH,OAAO,+BAA+B;SACzC;IAEL,CAAC;IAED,aAAa;IACb,uBAAuB;IACvB,UAAU,CAAC,OAAe;QACtB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IAED,2CAA2C;IAC3C,cAAc,CAAC,OAAe;QAC1B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IAED,0BAA0B;IAC1B,IAAI,WAAW;QACX,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;aAClD,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;CAGJ;;YAnFmC,+DAAW;;AAblC,cAAc;IAL1B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,2NAAqC;;KAExC,CAAC;GACW,cAAc,CAgG1B;AAhG0B;;;;;;;;;;;;;;;;;;;ACVc;AACO;AAOhD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,WAAW,CAAC,QAAgB,EAAE,QAAgB;QAC1C,MAAM,WAAW,GAAG,EAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,4CAA4C,EAAE,WAAW,CAAC,CAAC;IAC1F,CAAC;CACJ;;YAP6B,+DAAU;;AAF3B,WAAW;IAHvB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,WAAW,CASvB;AATuB;;;;;;;;;;;;;ACRxB;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;ACAb;AACT;AACc;AACb;AACI;AAS5C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAS/B,YAAoB,MAAc,EAAU,WAAwB,EAAU,WAAwB;QAAlF,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFtG,iBAAY,GAAG,KAAK,CAAC;IAGrB,CAAC;IAED,QAAQ;QAEJ,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,EAAE,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,EAAE,KAAK,IAAI,EAAE;YACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAE9B,IAAI,MAAM,CAAC,EAAE,CAAC,KAAM,CAAC,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aAEvC;iBAAO,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;gBAExB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aACzC;SACJ;IACL,CAAC;IAED,8BAA8B;IAC9B,aAAa;QACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YAE3C,sBAAsB;YACtB,MAAM,IAAI,GAAU,IAAI,kDAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAC7D,IAAI,EAAE,IAAI,CAAC,CAAC;YAEhB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3D,IAAI,CAAC,EAAE;gBACH,mCAAmC;gBACnC,iCAAiC;gBACjC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/C,IAAI,QAAQ,GAAE,SAAS,GAAE,IAAI,CAAC,KAAK,CAAC;gBACpC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBAI1C,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,EAAU,EAAE,EAAE;oBAC9D,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBAEvB,IAAI,EAAE,KAAK,CAAC,EAAE;wBAEV,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;wBAC9B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;wBACpC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;wBACzC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;qBAE/C;yBAAM,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;wBAElB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;qBAE1B;yBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;wBAGf,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;wBAC9B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;wBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;wBACtC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;wBACzC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;qBAE/C;yBAAM;wBAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;qBAC1B;gBAGL,CAAC,CAAC,CAAC;YAEP,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,oBAAoB;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAE3B,CAAC,CAEJ,CAAC;SAGL;IACL,CAAC;CAEJ;;YAzF+B,sDAAM;YAAuB,+DAAW;YAAuB,yDAAW;;AAT7F,sBAAsB;IALlC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,mPAA6C;;KAEhD,CAAC;GACW,sBAAsB,CAkGlC;AAlGkC;;;;;;;;;;;;;ACbnC;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;ACAK;AAChC;AAEmB;AAOrD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAYhC,YAAmB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAV5C,kBAAa,GAAG,iBAAiB,CAAC;QAIlC,gBAAW,GAAG,IAAI,CAAC;QACnB,mBAAc,GAAiB,IAAI,iDAAY,EAAE,CAAC;IAKH,CAAC;IAIhD,QAAQ;QACJ,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,IAAI,IAAI;QACJ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aACtE,SAAS,CAAC,CAAC,IAAW,EAAE,EAAE;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,aAAa;QACT,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAE7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAE1B;aAAM;YAGH,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAC7D,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;iBACZ,SAAS,CAAC,CAAC,QAAgB,EAAE,EAAE;gBAExB,IAAI,QAAQ,KAAK,CAAC,EAAE;oBAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC5B;gBAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YAEnC,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACtB,CAAC,CACJ,CAAC,CAAC;SACV;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC/B,CAAC;IAGD,WAAW;QACP,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;CAEJ;;YAxDoC,+DAAW;;AAEnC;IAAR,2DAAK,EAAE;qDAAa;AAdZ,uBAAuB;IALnC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,sPAA8C;;KAEjD,CAAC;GACW,uBAAuB,CAoEnC;AApEmC;;;;;;;;;;;;;ACVpC;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;;ACAF;AACN;AAEnB;AAOlC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAQ7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN5C,kBAAa,GAAG,SAAS,CAAC;QAC1B,gBAAW,GAAiB,IAAI,iDAAY,EAAE,CAAC;IAM/C,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAED,IAAI,IAAI;QACJ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAW,EAAE,EAAE;YACzF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QAER,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,cAAc;QACV,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,+BAA+B;QAC/B,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC;IAC1B,CAAC;IAGD,WAAW;QACP,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;CACJ;;YAjCoC,+DAAW;;AARnC,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,6OAA2C;;KAE9C,CAAC;GACW,oBAAoB,CAyChC;AAzCgC;;;;;;;;;;;;;ACVjC;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;ACAN;AACF;AASrD,IAAa,+BAA+B,GAA5C,MAAa,+BAA+B;IAExC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAI5C,aAAQ,GAAG,CAAC,CAAC;IAJkC,CAAC;IAMhD,QAAQ,KAAI,CAAC;IAEb,yBAAyB;IACzB,YAAY;QACR,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,IAAI,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACrB;QACD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW,CAAC,MAAc;QACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CAGJ;;YA3BoC,+DAAW;;AAEnC;IAAR,2DAAK,EAAE;qEAA6B;AAC5B;IAAR,2DAAK,EAAE;6DAAa;AALZ,+BAA+B;IAL3C,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,iRAAuD;;KAE1D,CAAC;GACW,+BAA+B,CA6B3C;AA7B2C;;;;;;;;;;;;;ACV5C;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;ACAN;AACF;AASrD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAEnC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAKD,QAAQ,KAAI,CAAC;IAEb,gBAAgB;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;QACnE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,gCAAgC,CAAC,CAAC;YACnF,+BAA+B,CAAC,CAAC;IAErC,CAAC;IAED,uBAAuB;QACrB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;YAC7C,OAAO,SAAS,CAAC;SAClB;aAAM;YACL,OAAO,UAAU,CAAC;SACnB;IACH,CAAC;CAEF;;YA3BkC,+DAAW;;AAGnC;IAAR,2DAAK,EAAE;wDAAgB;AACf;IAAR,2DAAK,EAAE;uDAAgB;AANb,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,4PAAgD;;KAEjD,CAAC;GACW,wBAAwB,CA6BpC;AA7BoC;;;;;;;;;;;;;ACVrC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;ACAN;AAOvD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAGjB,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACtC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;CACF;AATU;IAAR,2DAAK,EAAE;mDAAoB;AAJjB,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iOAAuC;;KAExC,CAAC;GACW,eAAe,CAa3B;AAb2B;;;;;;;;;;;;;ACP5B;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;;;ACAF;AACsC;AAC1D;AACc;AACb;AAEI;AAQ5C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAgB1B,YAAoB,MAAc,EAAU,WAAwB,EAAU,WAAwB;QAAlF,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QARtG,gBAAW,GAAG,KAAK,CAAC;QACpB,SAAI,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG;YACzF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAOxB,IAAI,CAAC,MAAM,GAAG,IAAI,wDAAS,CAAC;YAEpB,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC3B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC;aAClE,CAAC;YACF,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACzB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAAC,qCAAqC,CAAC;aAC5D,CAAC;YACF,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3D,CACJ,CAAC;IACN,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,UAAU,CAAC,KAAU,EAAE,KAAU;QAC7B,IAAI,KAAK,KAAK,KAAK,EAAE;YACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED,QAAQ,CAAC,KAAU,EAAE,KAAU,EAAE,KAAU,EAAE,KAAU,EAAE,OAAY,EAAE,KAAU;QAC7E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,MAAM,OAAO,GAAU,IAAI,kDAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAC5G,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,EAAU,EAAE,EAAE;YAC5D,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;gBACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;iBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;gBAGf,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACnE,IAAI,CAAC,EAAE;oBACH,mCAAmC;oBACnC,iCAAiC;oBACjC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAClD,IAAI,QAAQ,GAAE,SAAS,GAAE,IAAI,CAAC,KAAK,CAAC;oBACpC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;oBAG1C,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;oBACvC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;oBAC9B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAE1C,CAAC,EACD,GAAG,CAAC,EAAE;oBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAE5B,CAAC,CAEJ,CAAC;gBAGF,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;gBACjD,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC/C;QACL,CAAC,EACG,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,WAAW;QACP,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;YAC/D,mBAAmB,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QACJ,4BAA4B;IAChC,CAAC;CACJ;;YAxF+B,sDAAM;YAAuB,+DAAW;YAAuB,yDAAW;;AAhB7F,iBAAiB;IAL7B,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,oOAAwC;;KAE3C,CAAC;GACW,iBAAiB,CAwG7B;AAxG6B;;;;;;;;;;;;;ACd9B;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;ACAN;AAOvD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B,gBAAgB,CAAC;IAIjB,QAAQ;IACR,CAAC;CAEF;AALU;IAAR,2DAAK,EAAE;uDAAmB;AAJhB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gPAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAShC;AATgC;;;;;;;;;;;;;ACPjC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;ACAK;AACb;AAEnB;AAQlC,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAiB9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAfrC,mBAAc,GAAG,CAAC,CAAC;QACnB,iBAAY,GAAG,CAAC,CAAC;QAExB,sBAAsB;QACtB,wBAAmB,GAAiB,IAAI,iDAAY,EAAE,CAAC;QAEvD,SAAI,GAAG,CAAC,CAAC;QACT,sBAAiB,GAAG,EAAE,CAAC;QACvB,SAAI,GAAG,EAAE,CAAC;IAOqC,CAAC;IAEhD,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAC3C,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,+BAA+B;IAC/B,IAAI,QAAQ;QAER,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;YACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;SACjC;QAED,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EACrF,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,EACrC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC,aAA8B,EAAE,EAAE;YACtF,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACvC,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QAGR,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,IAAI,aAAa;QACb,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YAC7G,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QACR,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,uBAAuB;IACvB,UAAU,CAAC,OAAe;QACtB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC;IAED,2CAA2C;IAC3C,cAAc,CAAC,OAAe;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC;IAED,0BAA0B;IAC1B,IAAI,WAAW;QACX,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;aAC5D,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,qBAAqB,CAAC,GAAW;QAC7B,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;YACxE,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACnC,OAAO,SAAS,CAAC;SACpB;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,WAAW;QACP,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAChD,WAAW,CAAC,CAAC;IACrB,CAAC;IAED,WAAW;QACP,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;CAEJ;;YAjFoC,+DAAW;;AAFnC;IAAR,2DAAK,EAAE;mDAAa;AAfZ,qBAAqB;IALjC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,gPAA4C;;KAE/C,CAAC;GACW,qBAAqB,CAkGjC;AAlGiC;;;;;;;;;;;;;ACXlC;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;ACAF;AACzB;AAEmB;AASrD,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAWtC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAT5C,wBAAmB,GAAiB,IAAI,iDAAY,EAAE,CAAC;QAEvD,mBAAc,GAAG,EAAE,CAAC;QACpB,iBAAY,GAAG,CAAC,CAAC;QACjB,SAAI,GAAG,CAAC,CAAC;QAET,UAAK,GAAY,KAAK,CAAC;IAGwB,CAAC;IAEhD,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QACvC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACvF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CACJ,CAAC,CAAC;IAEP,CAAC;IAED,IAAI,QAAQ;QAER,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,EAC/D,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,EACrC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,aAA8B,EAAE,EAAE;YAClE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACvC,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CACJ,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,uBAAuB;IACvB,UAAU,CAAC,OAAe;QACtB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC;IAED,IAAI,WAAW;QACX,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;aAC5D,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAGD,WAAW;QACP,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;CAEJ;;YAjDoC,+DAAW;;AAXnC,6BAA6B;IALzC,+DAAS,CAAC;QACP,QAAQ,EAAE,4BAA4B;QACtC,8QAAsD;;KAEzD,CAAC;GACW,6BAA6B,CA4DzC;AA5DyC;;;;;;;;;;;;;ACZ1C;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;ACAF;AACZ;AACM;AACnB;AASlC,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAYvC,YAAoB,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAVlD,wBAAmB,GAAiB,IAAI,iDAAY,EAAE,CAAC;QAEvD,mBAAc,GAAG,EAAE,CAAC;QACpB,iBAAY,GAAG,CAAC,CAAC;QACjB,SAAI,GAAG,CAAC,CAAC;IAQT,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QACvC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACvF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,IAAI,QAAQ;QACR,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,EACrE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,EACrC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,aAA8B,EAAE,EAAE;YAClE,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;QAC3C,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QACR,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,aAAa;IAEb,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,uBAAuB;IACvB,UAAU,CAAC,OAAe;QACtB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC;IAED,IAAI,WAAW;QACX,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;aAC5D,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,cAAc,CAAC,OAAe;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC;IAGD,WAAW;QACP,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;CACJ;;YAxDoC,+DAAW;YACR,8DAAc;;AAbzC,8BAA8B;IAL1C,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,iRAAuD;;KAE1D,CAAC;GACW,8BAA8B,CAoE1C;AApE0C;;;;;;;;;;;;;;;;;;ACZD;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAJzB;QAKE,UAAK,GAAG,MAAM,CAAC;IACjB,CAAC;CAAA;AAFY,YAAY;IAJxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;KACpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;ACPkB;AAIF;AAIzC,MAAM,gBAAgB,GAAG,eAAe,CAAC;AAKzC,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEpB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,IAAI,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACZ,UAAU,EAAE;oBACR,aAAa,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC;iBACjD;aACJ,CAAC;SACL;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;CAEJ;;YAb+B,sDAAM;;AAFzB,WAAW;IAHvB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,WAAW,CAevB;AAfuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbgC;AACjB;AACM;AACU;AACgC;AACxB;AAC2B;AAET;AACpC;AACsE;AAChE;AACM;AACgB;AAC/B;AACsE;AAC9D;AACJ;AAiC9C,IAAa,SAAS,GAAtB,MAAa,SAAS;CACrB;AADY,SAAS;IA/BrB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,uEAAa;YACb,qEAAa;YACb,kEAAc;YACd,4DAAY,CAAC,OAAO,CAAC;gBACnB;oBACE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+FAAoB;oBAChD,WAAW,EAAE,CAAC,wEAAkB,CAAC;iBAClC;gBACD;oBACE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,wGAAuB;oBAC1D,WAAW,EAAE,CAAC,wEAAkB,CAAC;iBAClC;gBACD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,6EAAc,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAC;gBAC7E,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,qGAAsB,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAC;gBAC7F,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,kIAA8B,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAC;gBACpG,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+HAA6B,EAAC;gBACpE,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAC;aAE9E,CAAC;YACF,mEAAmB;YACnB,sEAAgB;SACjB;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;QAC5B,SAAS,EAAE,CAAC,wEAAkB,EAAE,yDAAW,EAAE;gBAC3C,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,6DAAW,EAAE,KAAK,EAAE,IAAI;aAE/D,CAAC;QACF,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;;;;;;;;;;;;;AClDmB;AAC2C;AACG;AAGvF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAG7B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAF1B,oBAAe,GAAG,IAAI,CAAC;IAG/B,CAAC;IAED,WAAW,CAAC,KAA6B,EAC7B,KAA0B;QACpC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,KAAK,CAAC,SAAS,KAAK,qGAAsB,EAAE;gBAC9C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC/B,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;;YAd6B,sDAAM;;AAHvB,kBAAkB;IAD9B,gEAAU,EAAE;GACA,kBAAkB,CAiB9B;AAjB8B;;;;;;;;;;;;;;;;;ACLxB,MAAM,aAAa;CAMzB;;;;;;;;;;;;;;;;;ACHM,MAAM,KAAK;IAed,YAAY,SAAiB,EAAE,QAAgB,EAAE,KAAa,EAAE,QAAgB,EAAE,UAAkB,EAAE,KAAa;QAN5G,eAAU,GAAG,EAAE,CAAC;QAOnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAEvB,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AC3BwC;AACM;AACJ;AAU3C,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAI;AAAf,WAAW;IAPvB,8DAAQ,CAAC;QACR,SAAS,EAAE,CAAC,yDAAW,CAAC;QACxB,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,WAAW,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACZiB;AACyC;AAEvC;AACG;AACE;AACT;AAIvC,IAAa,WAAW,GAAxB,MAAa,WAAW;IAoBpB,YAAoB,IAAiB,EAAU,UAAsB,EAAU,MAAc;QAAzE,SAAI,GAAJ,IAAI,CAAa;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAXrF,gBAAW,GAAiB,IAAI,iDAAY,EAAE,CAAC;QAK/C,gBAAW,GAAG,IAAI,CAAC;QACnB,iBAAY,GAAG,IAAI,CAAC;QACpB,uBAAkB,GAAG,IAAI,CAAC;QAC1B,gBAAW,GAAG,IAAI,CAAC;QACnB,qBAAgB,GAAG,IAAI,CAAC;IAGhC,CAAC;IAED,yDAAyD;IACzD,0BAA0B;IACnB,QAAQ,CAAC,MAAc,EAAE,KAAa;QACzC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,GAAG,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC;iBAChF,SAAS,CAAC,CAAC,KAAc,EAAE,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;SACd;QAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,6BAA6B;IACtB,OAAO,CAAC,EAAU;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kCAAkC,GAAG,EAAE,CAAC;iBACpE,SAAS,CAAC,CAAC,IAAW,EAAE,EAAE;gBACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;SACd;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IAEpC,CAAC;IAEM,mBAAmB,CAAC,EAAU,EAAE,MAAc,EAAE,KAAa,EAAE,IAAY;QAC9E,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kCAAkC,GAAG,EAAE,GAAG,mBAAmB,GAAG,MAAM,GAAG,SAAS,GAAG,KAAK;gBACpG,QAAQ,GAAG,IAAI,CAAC;iBACf,SAAS,CAAC,CAAC,YAA6B,EAAE,EAAE;gBACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACzC,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC,CAAC;SACb;QACD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAEM,UAAU;QACb,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,uCAAuC,CAAC,CAAC,SAAS,CAC1E,CAAC,KAAa,EAAE,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;SACV;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAEM,iBAAiB,CAAC,EAAU;QAC/B,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,kCAAkC,GAAG,EAAE,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAC9F,CAAC,KAAa,EAAE,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;SACV;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAED,+BAA+B;IACxB,iBAAiB,CAAC,IAAW;QAEhC,IAAI,CAAC,MAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,wCAAwC,GAAI,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACzF,CAAC,EAAU,EAAE,EAAE;YACX,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC,EAAE,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAEM,YAAY,CAAC,IAAW;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,oCAAoC,EAAE,IAAI,CAAC,CAAC,SAAS,CAC9E,CAAC,EAAU,EAAE,EAAE;YACX,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAEM,aAAa,CAAC,IAAW,EAAE,EAAU;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QAErC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,0CAA0C,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CACzF,CAAC,QAAgB,EAAE,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,EACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IAED,yDAAyD;IAClD,UAAU,CAAC,EAAU,EAAE,IAAW;QACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAQ,kCAAkC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1F,CAAC;IAGD,8BAA8B;IACvB,sBAAsB,CAAC,YAA2B;QACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE,YAAY,CAAC;aAC5F,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,8BAA8B;IACvB,eAAe,CAAC,IAAY,EAAE,IAAY;QAC7C,MAAM,eAAe,GAAkB,IAAI,4DAAa,EAAE,CAAC;QAC3D,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAgB,0CAA0C,EAAE,eAAe,CAAC;aAC3F,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAGD,yDAAyD;IAClD,eAAe,CAAC,EAAU,EAAE,MAAe;QAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kCAAkC,GAAG,EAAE,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IACjG,CAAC;IAGM,UAAU;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,sBAAsB;IACf,mBAAmB;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;CACJ;;YA9K6B,wDAAW;YAAsB,+DAAU;YAAkB,sDAAM;;AApBpF,WAAW;IADvB,gEAAU,EAAE;GACA,WAAW,CAkMvB;AAlMuB;;;;;;;;;;;;;ACVxB;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- Add subscriptions -->\\r\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <!-- Add subscriptions Header -->\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Add subscriptions</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- Add subscriptions body -->\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <form [formGroup]=\\\"FormAddSub\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"sub-name\\\" formControlName=\\\"SubscriptionName\\\"\\r\\n                           placeholder=\\\"Name of subscription\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"FormAddSub.controls['SubscriptionName'].invalid &&\\r\\n          FormAddSub.controls['SubscriptionName'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold ml-1 small\\\"> Enter a Name Subscription</p>\\r\\n                    </div>\\r\\n\\r\\n                    <input type=\\\"number\\\" name=\\\"cost\\\" formControlName=\\\"SubscriptionCost\\\" placeholder=\\\"Cost\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"FormAddSub.controls['SubscriptionCost'].invalid &&\\r\\n           FormAddSub.controls['SubscriptionCost'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold ml-1 small\\\"> Enter a Cost Subscription</p>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n            <!-- Add subscriptions footer -->\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!FormAddSub.valid\\\"\\r\\n                        (click)=\\\"userService.addSubscription(FormAddSub.controls['SubscriptionName'].value,\\r\\n                 FormAddSub.controls['SubscriptionCost'].value)\\\"\\r\\n                        data-dismiss=\\\"modal\\\" [routerLink]=\\\"['/products', 0]\\\">Add\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<button class=\\\"btn btn-success m-3 small\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\r\\n    Add subscription\\r\\n</button>\\r\\n\"","export default \"<app-nav-bar [nameNavBar]=\\\"nameComponent\\\"></app-nav-bar>\\r\\n<app-server-error *ngIf=\\\"error\\\" [nameError]=\\\"'List with users not available'\\\"></app-server-error>\\r\\n\\r\\n\\r\\n<!--Table with user-->\\r\\n<div *ngIf=\\\"!error\\\">\\r\\n    <span class=\\\"badge badge-warning mt-3 ml-3\\\">Users Information</span>\\r\\n    <div class=\\\"shadow-lg p-3 bg-white ml-3 mr-3\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n                <th>Number</th>\\r\\n                <th>Last Name</th>\\r\\n                <th>Count ON Subscriptions</th>\\r\\n                <th>Balance</th>\\r\\n                <th>Status</th>\\r\\n                <th>User Subscription</th>\\r\\n                <th>Management Status</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let user of Users; let idx = index\\\">\\r\\n                <td>{{idx + usersPerPage * (page - 1) + 1}}</td>\\r\\n                <td><b> {{user.lastName}}</b></td>\\r\\n                <td><div *ngIf=\\\"!user.admin\\\">{{user?.subscriptions.length}}</div></td>\\r\\n                <td>\\r\\n                    <div *ngIf=\\\"!user.admin\\\">{{user.billingAccounts[0].amount}} $</div>\\r\\n                </td>\\r\\n                <td><p [class]=\\\"getClassMap(idx)\\\"> {{userStatus(idx)}} </p></td>\\r\\n                <td>\\r\\n                    <div *ngIf=\\\"!user.admin\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-sm\\\" [routerLink]=\\\"['/products', user.id]\\\">\\r\\n                            User Subscription\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <div class=\\\"d-flex justify-content-start\\\">\\r\\n                        <app-management-users *ngIf=\\\"!user.admin\\\" [idUser]=\\\"idx\\\" [users]=\\\"Users\\\"></app-management-users>\\r\\n                        <div class=\\\"custom-control custom-switch ml-1\\\">\\r\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"switch + {{idx}}\\\"\\r\\n                                   [(ngModel)]=\\\"user.admin\\\" name=\\\"example\\\" (click)=\\\"managementUser(idx)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"switch + {{idx}}\\\">Admin</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"users && count\\\">\\r\\n        <div class=\\\"d-flex my-2\\\">\\r\\n            <div class=\\\"dropup dropright ml-3\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-success dropdown-toggle small\\\" data-toggle=\\\"dropdown\\\">\\r\\n                    {{usersPerPage}}\\r\\n                </button>\\r\\n                <div class=\\\"dropdown-menu\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(3)\\\">3</a>\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(5)\\\">5</a>\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(7)\\\">7</a>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"btn-group btn-group-sm ml-auto mr-3\\\">\\r\\n                <button *ngFor=\\\"let page of pageNumbers\\\" (click)=\\\"changePage(page)\\\"\\r\\n                        class=\\\"btn btn-outline-success\\\" [class.active]=\\\"page == selectedPage\\\">\\r\\n                    {{page}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div>\\r\\n        <app-add-subscription></app-add-subscription>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"userService.updateSubscriptions()\\\"\\r\\n                [routerLink]=\\\"['/products', 0]\\\">View Subscriptions\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!--NavBar-->\\r\\n<nav class=\\\"jnavbar navbar-expand-sm bg-dark navbar-dark d-flex\\\">\\r\\n    <a class=\\\"navbar-brand mr-auto\\\" href=\\\"\\\">Simple Charging</a>\\r\\n    <app-register></app-register>\\r\\n    <button class=\\\"btn btn-success btn-sm mr-5 my-1\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#registerModal\\\">\\r\\n        Sign In\\r\\n    </button>\\r\\n</nav>\\r\\n\\r\\n<app-view-all-subscriptions></app-view-all-subscriptions>\\r\\n<app-server-error *ngIf=\\\"error\\\" [nameError]=\\\"'Authorization failed'\\\"></app-server-error>\\r\\n\\r\\n<!-- Sign In -->\\r\\n<div class=\\\"modal\\\" id=\\\"registerModal\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <!-- Register Header -->\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Sign In</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" id=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            </div>\\r\\n\\r\\n            <!-- Register body -->\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p><input [(ngModel)]=\\\"login\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"login\\\" placeholder=\\\"Login\\\"></p>\\r\\n                <p><input [(ngModel)]=\\\"passwd\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\"\\r\\n                          placeholder=\\\"Password\\\"></p>\\r\\n                <div *ngIf=\\\"emptyField\\\">\\r\\n                    <p class=\\\"text-danger small font-weight-bold\\\">Enter the login and password</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"failedData\\\">\\r\\n                    <p class=\\\"text-danger small font-weight-bold\\\" data-dismiss=\\\"modal\\\">Invalid login or password</p>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Register footer -->\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm ml-1\\\" (click)=\\\"authorization()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-nav-bar [nameNavBar]=\\\"nameComponent\\\"></app-nav-bar>\\r\\n<app-server-error *ngIf=\\\"error\\\" [nameError]=\\\"'Account not available'\\\"></app-server-error>\\r\\n\\r\\n<div *ngIf=\\\"!error\\\">\\r\\n    <!-- Balance -->\\r\\n    <div class=\\\"d-flex\\\">\\r\\n        <div class=\\\"card m-3\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div><label>Number card: <b>{{User?.billingAccounts[0].numberCard}}</b></label></div>\\r\\n                <div class=\\\"balance\\\">\\r\\n                    <label>Balance on account: <b>{{User?.billingAccounts[0].amount}} $</b></label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Transfer of money -->\\r\\n    <span class=\\\"badge badge-warning mt-3 ml-3\\\">Transfer of money</span>\\r\\n    <div class=\\\"d-flex\\\">\\r\\n        <div class=\\\"shadow-lg p-4 mb-4 bg-white ml-3 mr-3\\\">\\r\\n            <input [(ngModel)]=\\\"amountTransfer\\\" type=\\\"number\\\" name=\\\"number-card\\\"\\r\\n                   placeholder=\\\"Amount\\\" class=\\\"form-control form-controlmb-3 my-3\\\">\\r\\n            <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"transferMoney()\\\">Transfer</button>\\r\\n            <div *ngIf=\\\"emptyField\\\">\\r\\n                <p class=\\\"text-danger font-weight-bold small my-1\\\">Enter the number card and amount</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!correctData\\\">\\r\\n                <p class=\\\"text-danger font-weight-bold small my-1\\\">The number entered is not correct</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-success btn-sm ml-3\\\" type=\\\"button\\\" (click)=\\\"usersService.updateUser()\\\"\\r\\n            routerLink=\\\"/account\\\">Return to account\\r\\n    </button>\\r\\n</div>\\r\\n\"","export default \"<app-nav-bar [nameNavBar]=\\\"nameComponent\\\"></app-nav-bar>\\r\\n<app-server-error *ngIf=\\\"error\\\" [nameError]=\\\"'Account not available'\\\"></app-server-error>\\r\\n\\r\\n<div *ngIf=\\\"error\\\" class = \\\"d-flex justify-content-center my-5\\\" >\\r\\n    <div class=\\\"spinner-grow text-success my-5\\\"></div>\\r\\n    <div class=\\\"spinner-grow text-info my-5\\\"></div>\\r\\n    <div class=\\\"spinner-grow text-warning my-5\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!error\\\">\\r\\n    <!--User Information-->\\r\\n    <span class=\\\"badge badge-warning mt-3 ml-3\\\">User Information</span>\\r\\n    <div class=\\\"shadow-lg p-4 mb-4 bg-white ml-3 mr-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <div class=\\\"last-name\\\">\\r\\n                    <label>Last Name: <b> {{User?.lastName}} </b> </label>\\r\\n                </div>\\r\\n                <div class=\\\"first-name\\\">\\r\\n                    <label>First Name: <b> {{User?.firstName}} </b> </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Balance: <b> {{User?.billingAccounts[0].amount}} $</b> </label>\\r\\n                <div>\\r\\n                    <button class=\\\"btn btn-success\\\" type=\\\"button\\\" routerLink=\\\"/billingaccount\\\">E-wallet</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <app-subscription [user]=\\\"User\\\"></app-subscription>\\r\\n</div>\\r\\n\"","export default \"<div *ngIf=\\\"user\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"!subscription.status\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"changeStatus()\\\"\\r\\n                    [disabled]=\\\"user.blocked\\\">ON\\r\\n            </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"subscription.status\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"changeStatus()\\\"\\r\\n                    [disabled]=\\\"user.blocked\\\">OFF\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"d-inline-flex\\\" *ngIf=\\\"!subscription.status\\\">\\r\\n            <p class=\\\"text-black-50 ml-3 font-italic font-weight-bold mr-2\\\">Period:</p>\\r\\n            <div class=\\\"dropdown dropright\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-dark dropdown-toggle btn-sm\\\" data-toggle=\\\"dropdown\\\"\\r\\n                        [disabled]=\\\"user.blocked\\\">\\r\\n                    {{getPeriodOn()}} min\\r\\n                </button>\\r\\n                <div class=\\\"dropdown-menu dropdown-menu-sm-left\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"setPeriodOn(1)\\\">1 min</a>\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"setPeriodOn(5)\\\">5 min</a>\\r\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"setPeriodOn(10)\\\">10 min</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","export default \"<button type=\\\"button\\\" [class]=getClassButton() (click)=\\\"invertUserStatus()\\\">\\r\\n  {{getNameManagementButton()}}\\r\\n</button>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<nav class=\\\"jnavbar navbar-expand-sm bg-dark navbar-dark d-flex\\\">\\r\\n  <a class=\\\"navbar-brand ml-2 mr-auto\\\" routerLink=\\\"**\\\">{{nameNavBar}}</a>\\r\\n  <button class=\\\"btn btn-success btn-sm mr-5 my-1\\\" type=\\\"button\\\" (click)=\\\"logOut()\\\"\\r\\n          routerLink=\\\"/**\\\">Exit</button>\\r\\n</nav>\\r\\n\"","export default \"<!--Register users-->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm my-1 mr-2\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\r\\n    Register\\r\\n</button>\\r\\n\\r\\n<!-- Register -->\\r\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <!-- Register Header -->\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Register</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" id = \\\"closeRegister\\\">&times;</button>\\r\\n            </div>\\r\\n\\r\\n            <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <!-- Register body -->\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n\\r\\n                    <input type=\\\"text\\\" name=\\\"firstname\\\" formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"myForm.controls['firstName'].invalid && myForm.controls['firstName'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold ml-1 small\\\"> Enter a First Name</p>\\r\\n                    </div>\\r\\n\\r\\n                    <input type=\\\"text\\\" name=\\\"lname\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Last Name\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"myForm.controls['lastName'].invalid && myForm.controls['lastName'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold small ml-1\\\"> Enter a Last Name</p>\\r\\n                    </div>\\r\\n\\r\\n                    <input type=\\\"text\\\" id=\\\"card\\\" name=\\\"card\\\" formControlName=\\\"numCard\\\" placeholder=\\\"Number of card\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\" [textMask]=\\\"{mask: mask}\\\">\\r\\n                    <div *ngIf=\\\"myForm.controls['numCard'].invalid && myForm.controls['numCard'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold small ml-1\\\"> Card number entered incorrectly, example:\\r\\n                            **** **** **** ****</p>\\r\\n                    </div>\\r\\n\\r\\n                    <input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"userEmail\\\" placeholder=\\\"Email\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold small ml-1\\\"> Email entered incorrectly, example:\\r\\n                            example@mail.com</p>\\r\\n                    </div>\\r\\n\\r\\n                    <input type=\\\"text\\\" name=\\\"login\\\" formControlName=\\\"userLogin\\\" placeholder=\\\"Login\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"myForm.controls['userLogin'].invalid && myForm.controls['userLogin'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold small ml-1\\\"> Enter a Login </p>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <input type=\\\"password\\\" formControlName=\\\"userPassword\\\" name=\\\"passwd\\\" placeholder=\\\"Password\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n                    <div *ngIf=\\\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold small ml-1\\\"> Enter a Password</p>\\r\\n                    </div>\\r\\n\\r\\n                    <input type=\\\"password\\\" formControlName=\\\"reUserPassword\\\" name=\\\"passwd1\\\"\\r\\n                           placeholder=\\\"Re-entry Password\\\"\\r\\n                           class=\\\"form-control form-control-sm my-3\\\">\\r\\n\\r\\n                    <script>$('#myModal').modal('hide')</script>\\r\\n\\r\\n                    <div *ngIf=\\\"passwordOK(myForm.controls['userPassword'].value, myForm.controls['reUserPassword'].value)\\\">\\r\\n                        <p class=\\\"text-danger font-weight-bold small ml-1\\\"> Password dont equals</p>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"failedLogin\\\"><p class=\\\"text-danger font-weight-bold small ml-1\\\"> Enter a different\\r\\n                        login</p></div>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n            <!-- Register footer -->\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid || !canRegister\\\" [class]=\\\"getClassMap()\\\"\\r\\n                        (click)=\\\"Register(myForm.controls['firstName'].value, myForm.controls['lastName'].value,\\r\\n                myForm.controls['userLogin'].value, myForm.controls['userPassword'].value,\\r\\n                myForm.controls['numCard'].value, myForm.controls['userEmail'].value)\\\">\\r\\n                    OK\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"d-flex justify-content-end\\\">\\r\\n    <div class=\\\"alert alert-danger\\\">\\r\\n        <strong>Server Error! </strong> {{nameError}}\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<span class=\\\"badge badge-info ml-3\\\">Subscriptions</span>\\r\\n<app-server-error *ngIf=\\\"error\\\" [nameError]=\\\"'Subscriptions not available'\\\"></app-server-error>\\r\\n\\r\\n<div class=\\\"d-flex\\\">\\r\\n    <p><input type=\\\"text\\\" class=\\\"form-control form-control-sm ml-3\\\" [(ngModel)] = \\\"findSubscriptions\\\"\\r\\n              placeholder=\\\"Find subscription\\\"></p>\\r\\n</div>\\r\\n<!--Subscription-->\\r\\n<div *ngIf=\\\"countProducts && products && !error && user\\\">\\r\\n\\r\\n    <div class=\\\"shadow-lg p-4 bg-white mb-2 ml-3 mr-3\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n                <th>Number</th>\\r\\n                <th>Name of subscription</th>\\r\\n                <th>Status</th>\\r\\n                <th>Cost (1 min)</th>\\r\\n                <th>Time left</th>\\r\\n                <th>Management</th>\\r\\n                <th></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let product of products; let idx = index\\\">\\r\\n                <td>{{idx + productPerPage * (page - 1) + 1}}</td>\\r\\n                <td>{{product.name}}</td>\\r\\n                <td>\\r\\n                    <div *ngIf=product.id>\\r\\n                        <p [class]=\\\"getClassMap()\\\">\\r\\n                            Subscription <b> {{getStatusSubscription(idx)}}</b></p>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td>{{product.cost}} $</td>\\r\\n                <td>{{product.period}} min</td>\\r\\n                <td>\\r\\n                    <app-management-subscription\\r\\n                            [subscription]=\\\"product\\\" [user]=\\\"user\\\"></app-management-subscription>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"!findSubscriptions\\\" class=\\\"d-flex\\\">\\r\\n        <div class=\\\"dropup dropright ml-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary dropdown-toggle small\\\" data-toggle=\\\"dropdown\\\">\\r\\n                {{productPerPage}}\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\">\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(3)\\\">3</a>\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(5)\\\">5</a>\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(7)\\\">7</a>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"btn-group btn-group-sm ml-auto mr-3\\\">\\r\\n            <button *ngFor=\\\"let page of pageNumbers\\\" (click)=\\\"changePage(page)\\\"\\r\\n                    class=\\\"btn btn-outline-primary\\\" [class.active]=\\\"page == selectedPage\\\">\\r\\n                {{page}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"d-flex justify-content-end\\\">\\r\\n    <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\r\\n        <strong>Server Error!</strong> Subscriptions not available\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!error\\\" class=\\\"alert alert-secondary mr-3 ml-3 my-3\\\">\\r\\n    <h2>Subscriptions Charging Service</h2>\\r\\n</div>\\r\\n<div *ngIf=\\\"!error\\\" class=\\\"shadow-lg bg-white mr-3 ml-3\\\">\\r\\n    <table class=\\\"table table-sm table-borderless\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n        <tr>\\r\\n            <th>Number</th>\\r\\n            <th>Name of subscription</th>\\r\\n            <th>Cost $</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let product of products; let idx = index\\\">\\r\\n            <td>{{idx + productPerPage * (page - 1) + 1}}</td>\\r\\n            <td>\\r\\n                <div><b>{{product.name}}</b></div>\\r\\n            </td>\\r\\n            <td>{{product.cost}}</td>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"!error && countProducts && products\\\">\\r\\n\\r\\n    <div class=\\\"d-flex flex-row-reverse\\\">\\r\\n\\r\\n        <div class=\\\"btn-group btn-group-sm ml-auto mr-3\\\">\\r\\n            <button *ngFor=\\\"let page of pageNumbers\\\" (click)=\\\"changePage(page)\\\"\\r\\n                    class=\\\"btn btn-outline-success\\\" [class.active]=\\\"page == selectedPage\\\">\\r\\n                {{page}}\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-server-error *ngIf=\\\"error\\\" [nameError]=\\\"'Subscriptions not available'\\\"></app-server-error>\\r\\n\\r\\n<span class=\\\"badge badge-info ml-3\\\">Subscriptions</span>\\r\\n<div *ngIf=\\\"!error\\\" class=\\\"shadow-lg p-4 mb-4 bg-white ml-3 mr-3\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n        <tr>\\r\\n            <th>Number</th>\\r\\n            <th>Name of subscription</th>\\r\\n            <th>\\r\\n                <div *ngIf=\\\"id > 0\\\">Status</div>\\r\\n            </th>\\r\\n            <th>Cost</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let product of products; let idx = index\\\">\\r\\n            <td>{{idx + productPerPage * (page - 1) + 1}}</td>\\r\\n            <td>{{product.name}}</td>\\r\\n            <td>\\r\\n                <div *ngIf=\\\"id > 0\\\">\\r\\n                    <div *ngIf=\\\"product.status\\\"><b>ON</b></div>\\r\\n                    <div *ngIf=\\\"!product.status\\\"><b>OFF</b></div>\\r\\n                </div>\\r\\n            </td>\\r\\n            <td>{{product.cost}}</td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"countProducts && products\\\">\\r\\n    <div class=\\\"d-flex\\\">\\r\\n        <div class=\\\"dropup dropright ml-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger dropdown-toggle small\\\" data-toggle=\\\"dropdown\\\">\\r\\n                {{productPerPage}}\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\">\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(3)\\\">3</a>\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(5)\\\">5</a>\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(7)\\\">7</a>\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"changePageSize(10)\\\">10</a>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"btn-group btn-group-sm ml-auto mr-3\\\">\\r\\n            <button *ngFor=\\\"let page of pageNumbers\\\" (click)=\\\"changePage(page)\\\"\\r\\n                    class=\\\"btn btn-outline-danger\\\" [class.active]=\\\"page == selectedPage\\\">\\r\\n                {{page}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<button class=\\\"btn btn-danger btn-sm ml-3 my-3\\\" type=\\\"button\\\" routerLink=\\\"/admin\\\">Return to Admin Account</button>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  get(url: string): Observable<any> {\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {SubscriptionComponent} from './subscription/subscription.component';\r\nimport {InformationComponent} from './information/information.component';\r\nimport {ModelModule} from '../model/model.module';\r\nimport {AuthorizationComponent} from './authorization/authorization.component';\r\nimport {BillingaccountComponent} from './billingaccount/billingaccount.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ManagementSubscriptionComponent} from './management-subscription/management-subscription.component';\r\nimport {NavBarComponent} from './nav-bar/nav-bar.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ManagementUsersComponent } from './management-users/management-users.component';\r\nimport { ViewSubscriptionAdminComponent } from './view-subscription-admin/view-subscription-admin.component';\r\nimport { AddSubscriptionComponent } from './add-subscription/add-subscription.component';\r\nimport { ViewAllSubscriptionsComponent } from './view-all-subscriptions/view-all-subscriptions.component';\r\nimport {TextMaskModule} from \"angular2-text-mask\";\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        FormsModule,\r\n        ModelModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        TextMaskModule\r\n    ],\r\n  declarations: [SubscriptionComponent, InformationComponent, AuthorizationComponent, BillingaccountComponent,\r\n    AdminComponent, ManagementSubscriptionComponent, NavBarComponent, RegisterComponent, ManagementUsersComponent, ViewSubscriptionAdminComponent, AddSubscriptionComponent, ViewAllSubscriptionsComponent, ServerErrorComponent],\r\n  exports: [SubscriptionComponent, InformationComponent, AuthorizationComponent,\r\n    BillingaccountComponent]\r\n})\r\nexport class AccountModule {\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWRkLXN1YnNjcmlwdGlvbi9hZGQtc3Vic2NyaXB0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {UserService} from '../../model/user.service';\r\n\r\n@Component({\r\n  selector: 'app-add-subscription',\r\n  templateUrl: './add-subscription.component.html',\r\n  styleUrls: ['./add-subscription.component.css']\r\n})\r\nexport class AddSubscriptionComponent implements OnInit {\r\n\r\n  FormAddSub: FormGroup;\r\n\r\n  constructor(public userService: UserService) {\r\n    this.FormAddSub = new FormGroup({\r\n\r\n        SubscriptionName: new FormControl('', Validators.required),\r\n        SubscriptionCost: new FormControl('', Validators.required)\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Users} from '../../model/Users';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-admin',\r\n    templateUrl: './admin.component.html',\r\n    styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit, OnDestroy {\r\n\r\n    nameComponent = 'Admin Account';\r\n    users: Users[];\r\n    usersStorage: Subscription = new Subscription();\r\n    count: number;\r\n    page = 1;\r\n    usersPerPage = 7;\r\n    selectedPage = 1;\r\n    error: boolean = false;\r\n\r\n    idInterval;\r\n\r\n    constructor(public userService: UserService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.idInterval = setInterval(() => {\r\n            this.userService.updateUser();\r\n            this.error = false;\r\n        }, 5000);\r\n    }\r\n\r\n    get Users(): Users[] {\r\n        this.usersStorage.add(this.userService.getUsers((this.page - 1) * this.usersPerPage,\r\n            this.usersPerPage).subscribe((users: Users[]) => {\r\n                this.users = users;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }));\r\n\r\n        this.usersStorage.add(this.userService.countUsers().subscribe((count: number) => {\r\n                this.count = count;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }\r\n        ));\r\n\r\n        return this.users;\r\n    }\r\n\r\n    userStatus(id: number): string {\r\n        if (!this.users[id].blocked && !this.users[id].admin) {\r\n            return 'Active';\r\n        } else if (this.users[id].blocked && !this.users[id].admin){\r\n            return 'Blocked';\r\n        } else {\r\n            return \"Admin\"\r\n        }\r\n    }\r\n\r\n    getClassMap(id: number): string {\r\n\r\n        if (this.userStatus(id) === 'Active' && !this.users[id].admin) {\r\n            return 'text-success font-weight-bold';\r\n        } else if (this.userStatus(id) !== 'Active' && !this.users[id].admin){\r\n            return 'text-danger font-weight-bold';\r\n        } else {\r\n            return \"text-primary font-weight-bold\"\r\n        }\r\n\r\n    }\r\n\r\n    // Pagination\r\n    // Changing page number\r\n    changePage(newPage: number) {\r\n        this.page = newPage;\r\n        this.selectedPage = this.page;\r\n        this.users = null;\r\n        this.userService.updateUser();\r\n    }\r\n\r\n    // Changing the number of items on the page\r\n    changePageSize(newSize: number) {\r\n        this.usersPerPage = Number(newSize);\r\n        this.userService.updateUser();\r\n    }\r\n\r\n    // Calculating page number\r\n    get pageNumbers(): number[] {\r\n        return Array(Math.ceil(this.count / this.usersPerPage))\r\n            .fill(0).map((x, i) => i + 1);\r\n    }\r\n\r\n    managementUser(id: number): void {\r\n        this.userService.managementAdmin(this.users[id].id, !this.users[id].admin);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.usersStorage.unsubscribe();\r\n        clearInterval(this.idInterval);\r\n    }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Token} from \"@angular/compiler\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    attemptAuth(username: string, password: string): Observable<any> {\r\n        const credentials = {username: username, password: password};\r\n        return this.http.post<any>('http://localhost:8080/token/generate-token', credentials);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYXV0aG9yaXphdGlvbi9hdXRob3JpemF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Users} from '../../model/Users';\r\nimport {AuthService} from \"../auth.service\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-authorization',\r\n    templateUrl: './authorization.component.html',\r\n    styleUrls: ['./authorization.component.css']\r\n})\r\nexport class AuthorizationComponent implements OnInit {\r\n\r\n    login: string;\r\n    passwd: string;\r\n    emptyField;\r\n    failedData;\r\n    error: boolean;\r\n    buttonReturn = false;\r\n\r\n    constructor(private router: Router, private userService: UserService, private authService: AuthService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        let user = sessionStorage.getItem('username');\r\n        let id = sessionStorage.getItem('id');\r\n        if (id !== null) {\r\n            this.buttonReturn = true;\r\n            this.userService.idUser = Number(id);\r\n            this.userService.updateSubscriptions();\r\n            this.userService.updateUser();\r\n\r\n            if (Number(id)  === 0) {\r\n                this.router.navigateByUrl('/admin');\r\n\r\n            }  else if (Number(id) > 0) {\r\n\r\n                this.router.navigateByUrl('/account');\r\n            }\r\n        }\r\n    }\r\n\r\n    // Authorization User or Admin\r\n    authorization(): void {\r\n        this.emptyField = false;\r\n        this.failedData = false;\r\n\r\n        if (this.login != null && this.passwd != null) {\r\n\r\n            // Create User for api\r\n            const user: Users = new Users(null, null, this.login, this.passwd,\r\n                null, null);\r\n\r\n            this.authService.attemptAuth(this.login, this.passwd).subscribe(\r\n                data => {\r\n                    //this.token.saveToken(data.token);\r\n                    //this.router.navigate(['user']);\r\n                    sessionStorage.setItem('username', this.login);\r\n                    let tokenStr= 'Bearer '+ data.token;\r\n                    sessionStorage.setItem('token', tokenStr);\r\n\r\n\r\n\r\n                    this.userService.authorizationUser(user).subscribe((id: number) => {\r\n                        console.log(\"id:\", id);\r\n\r\n                        if (id === 0) {\r\n\r\n                            this.userService.updateUser();\r\n                            this.router.navigateByUrl('/admin');\r\n                            document.getElementById(\"close\").click();\r\n                            sessionStorage.setItem('id', id.toString());\r\n\r\n                        } else if (id === -1) {\r\n\r\n                            this.failedData = true;\r\n\r\n                        } else if (id > 0) {\r\n\r\n\r\n                            this.userService.updateUser();\r\n                            this.userService.updateSubscriptions();\r\n                            this.router.navigateByUrl('/account');\r\n                            document.getElementById(\"close\").click();\r\n                            sessionStorage.setItem('id', id.toString());\r\n\r\n                        } else {\r\n\r\n                            this.emptyField = true;\r\n                        }\r\n\r\n\r\n                    });\r\n\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                    //this.error = true;\r\n                    this.failedData = true;\r\n\r\n                }\r\n\r\n            );\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYmlsbGluZ2FjY291bnQvYmlsbGluZ2FjY291bnQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {Users} from '../../model/Users';\r\nimport {UserService} from '../../model/user.service';\r\n\r\n@Component({\r\n    selector: 'app-billingaccount',\r\n    templateUrl: './billingaccount.component.html',\r\n    styleUrls: ['./billingaccount.component.css']\r\n})\r\nexport class BillingaccountComponent implements OnInit, OnDestroy {\r\n\r\n    nameComponent = 'Billing Account';\r\n\r\n    emptyField: boolean;\r\n    amountTransfer: number;\r\n    correctData = true;\r\n    billingStorage: Subscription = new Subscription();\r\n    //private user: Users;\r\n    error: boolean;\r\n\r\n\r\n    constructor(public usersService: UserService) {}\r\n\r\n    @Input() user: Users;\r\n\r\n    ngOnInit() {\r\n        this.usersService.updateUser();\r\n    }\r\n\r\n    get User() {\r\n        this.billingStorage.add(this.usersService.getUser(this.usersService.idUser)\r\n            .subscribe((user: Users) => {\r\n                    this.user = user;\r\n                },\r\n                err => {\r\n                    this.error = true;\r\n                }));\r\n        return this.user;\r\n    }\r\n\r\n    transferMoney(): void {\r\n        if (this.amountTransfer == null) {\r\n\r\n            this.emptyField = true;\r\n\r\n        } else {\r\n\r\n\r\n            this.user.amountTransfer = this.amountTransfer;\r\n            this.billingStorage.add(this.usersService.transferMoney(this.user,\r\n                this.user.id)\r\n                .subscribe((transfer: number) => {\r\n\r\n                        if (transfer === 1) {\r\n                            this.correctData = true;\r\n                        } else {\r\n                            this.correctData = false;\r\n                        }\r\n\r\n                        this.emptyField = false;\r\n                        this.usersService.updateUser();\r\n\r\n                    },\r\n                    err => {\r\n                        this.error = true;\r\n                    }\r\n                ));\r\n        }\r\n\r\n        this.amountTransfer = null;\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.billingStorage.unsubscribe();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvaW5mb3JtYXRpb24vaW5mb3JtYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Users} from '../../model/Users';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-information',\r\n    templateUrl: './information.component.html',\r\n    styleUrls: ['./information.component.css']\r\n})\r\nexport class InformationComponent implements OnInit, OnDestroy {\r\n\r\n    nameComponent = 'Account';\r\n    userStorage: Subscription = new Subscription();\r\n    user: Users;\r\n    idInterval;\r\n    error: boolean;\r\n\r\n    constructor(private userService: UserService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.idInterval = setInterval(() => {\r\n            this.userService.updateUser();\r\n            this.error = false;\r\n        }, 5000);\r\n    }\r\n\r\n    get User(): Users {\r\n        this.userStorage.add(this.userService.getUser(this.userService.idUser).subscribe((user: Users) => {\r\n                this.user = user;\r\n            },\r\n            err => {\r\n                console.log(err);\r\n                this.error = true;\r\n            }));\r\n\r\n        return this.user;\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem('username');\r\n        //console.log(!(user === null))\r\n        return (user === null)\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.userStorage.unsubscribe();\r\n        clearInterval(this.idInterval);\r\n    }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbWFuYWdlbWVudC1zdWJzY3JpcHRpb24vbWFuYWdlbWVudC1zdWJzY3JpcHRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Subscriptions} from '../../model/Subscriptions';\r\nimport {Users} from \"../../model/Users\";\r\n\r\n@Component({\r\n    selector: 'app-management-subscription',\r\n    templateUrl: './management-subscription.component.html',\r\n    styleUrls: ['./management-subscription.component.css']\r\n})\r\nexport class ManagementSubscriptionComponent implements OnInit {\r\n\r\n    constructor(private userService: UserService) {}\r\n\r\n    @Input() subscription: Subscriptions;\r\n    @Input() user: Users;\r\n    periodOn = 1;\r\n\r\n    ngOnInit() {}\r\n\r\n    // Change products status\r\n    changeStatus(): void {\r\n        if (this.subscription.status === true) {\r\n            this.periodOn = 1;\r\n        }\r\n        this.subscription.period = this.periodOn;\r\n        this.subscription.status = !this.subscription.status;\r\n        this.userService.modifyUserSubscription(this.subscription);\r\n    }\r\n\r\n    setPeriodOn(period: number) {\r\n        this.periodOn = period;\r\n    }\r\n\r\n    getPeriodOn(): number {\r\n        return this.periodOn;\r\n    }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbWFuYWdlbWVudC11c2Vycy9tYW5hZ2VtZW50LXVzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Users} from \"../../model/Users\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-management-users',\r\n  templateUrl: './management-users.component.html',\r\n  styleUrls: ['./management-users.component.css']\r\n})\r\nexport class ManagementUsersComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService) {\r\n  }\r\n\r\n  @Input() idUser: number;\r\n  @Input() users: Users[];\r\n\r\n  ngOnInit() {}\r\n\r\n  invertUserStatus(): void {\r\n    this.users[this.idUser].blocked = !this.users[this.idUser].blocked;\r\n    this.userService.modifyUser(this.idUser, this.users[this.idUser]);\r\n  }\r\n\r\n  getClassButton(): string {\r\n    return (this.users[this.idUser].blocked === true ? 'btn btn-outline-success btn-sm' :\r\n      'btn btn-outline-danger btn-sm');\r\n\r\n  }\r\n\r\n  getNameManagementButton(): string {\r\n    if (this.users[this.idUser].blocked === false) {\r\n      return 'Blocked';\r\n    } else {\r\n      return 'Activate';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbmF2LWJhci9uYXYtYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input() nameNavBar: string;\r\n  ngOnInit() {\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"id\");\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Users} from '../../model/Users';\r\nimport {$} from 'protractor';\r\nimport {AuthService} from \"../auth.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    firstName: string;\r\n    lastName: string;\r\n    numberCard: string;\r\n    newLogin: string;\r\n    newEmail: string;\r\n    newPassword: string;\r\n    canRegister: boolean;\r\n    failedLogin = false;\r\n    mask = [/[1-9]/, /\\d/, /\\d/, /\\d/,' ', /\\d/, /\\d/, /\\d/, /\\d/,' ', /\\d/, /\\d/, /\\d/, /\\d/,' ',\r\n        /\\d/, /\\d/, /\\d/, /\\d/];\r\n    myForm: FormGroup;\r\n\r\n    private error: boolean;\r\n\r\n\r\n    constructor(private router: Router, private userService: UserService, private authService: AuthService) {\r\n        this.myForm = new FormGroup({\r\n\r\n                firstName: new FormControl('', Validators.required),\r\n                lastName: new FormControl('', Validators.required),\r\n                userEmail: new FormControl('', [\r\n                    Validators.required,\r\n                    Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\r\n                ]),\r\n                numCard: new FormControl('', [\r\n                    Validators.required,\r\n                    Validators.pattern('[0-9]{4} [0-9]{4} [0-9]{4} [0-9]{4}')\r\n                ]),\r\n                userLogin: new FormControl('', Validators.required),\r\n                userPassword: new FormControl('', Validators.required),\r\n                reUserPassword: new FormControl('', Validators.required),\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    passwordOK(pass1: any, pass2: any): boolean {\r\n        if (pass1 === pass2) {\r\n            this.canRegister = true;\r\n            return false;\r\n        } else {\r\n            this.canRegister = false;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    Register(fName: any, lName: any, Login: any, passw: any, numCard: any, email: any): void {\r\n        this.firstName = String(fName);\r\n        this.lastName = String(lName);\r\n        this.newLogin = String(Login);\r\n        this.newPassword = String(passw);\r\n        this.numberCard = String(numCard);\r\n        this.newEmail = String(email);\r\n        const newUser: Users = new Users(this.firstName, this.lastName, this.newLogin, this.newPassword, this.numberCard,\r\n            this.newEmail);\r\n\r\n        this.userService.registerUser(newUser).subscribe((id: number) => {\r\n            if (id === -1) {\r\n                this.failedLogin = true;\r\n            } else if (id > 0) {\r\n\r\n\r\n                this.authService.attemptAuth(this.newLogin, this.newPassword).subscribe(\r\n                    data => {\r\n                        //this.token.saveToken(data.token);\r\n                        //this.router.navigate(['user']);\r\n                        sessionStorage.setItem('username', this.newLogin);\r\n                        let tokenStr= 'Bearer '+ data.token;\r\n                        sessionStorage.setItem('token', tokenStr);\r\n\r\n\r\n                        this.userService.updateSubscriptions();\r\n                        this.userService.updateUser();\r\n                        this.router.navigateByUrl('/account');\r\n\r\n                    },\r\n                    err => {\r\n                        console.log(err);\r\n                        this.failedLogin = true;\r\n\r\n                    }\r\n\r\n                );\r\n\r\n\r\n                document.getElementById(\"closeRegister\").click();\r\n                sessionStorage.setItem('id', id.toString());\r\n            }\r\n        },\r\n            err => {\r\n                this.error = true;\r\n            });\r\n    }\r\n\r\n    getClassMap(): string {\r\n        return (this.myForm.valid && this.canRegister ? 'btn btn-success' :\r\n            'btn btn-secondary');\r\n    }\r\n\r\n    onSubmit() {\r\n        // console.log(this.myForm);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvc2VydmVyLWVycm9yL3NlcnZlci1lcnJvci5jb21wb25lbnQuY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input() nameError: string;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvc3Vic2NyaXB0aW9uL3N1YnNjcmlwdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Subscriptions} from '../../model/Subscriptions';\r\nimport {Subscription} from 'rxjs';\r\nimport {Users} from '../../model/Users';\r\n\r\n@Component({\r\n    selector: 'app-subscription',\r\n    templateUrl: './subscription.component.html',\r\n    styleUrls: ['./subscription.component.css']\r\n})\r\nexport class SubscriptionComponent implements OnInit, OnDestroy {\r\n\r\n    public productPerPage = 5;\r\n    public selectedPage = 1;\r\n    subscriptions: Subscriptions[];\r\n    //private user: Users;\r\n    subscriptionStorage: Subscription = new Subscription();\r\n    count: number;\r\n    page = 1;\r\n    findSubscriptions = \"\";\r\n    find = \"\";\r\n\r\n    idInterval;\r\n    error: boolean;\r\n\r\n    @Input() user: Users;\r\n\r\n    constructor(private userService: UserService) {}\r\n\r\n    ngOnInit() {\r\n        this.idInterval = setInterval(() => {\r\n            this.userService.updateSubscriptions();\r\n        }, 20000);\r\n    }\r\n\r\n    // Get Products with pagination\r\n    get products(): Subscriptions[] {\r\n\r\n        if (this.find !== this.findSubscriptions) {\r\n            this.userService.updateSubscriptions();\r\n            this.find = this.findSubscriptions;\r\n            this.page = 1;\r\n            this.selectedPage = this.page;\r\n        }\r\n\r\n        this.subscriptionStorage.add(this.userService.getUserSubscription(this.userService.idUser,\r\n            (this.page - 1) * this.productPerPage,\r\n            this.productPerPage, this.findSubscriptions).subscribe((subscriptions: Subscriptions[]) => {\r\n                this.subscriptions = subscriptions;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }));\r\n\r\n\r\n        return this.subscriptions;\r\n    }\r\n\r\n    get countProducts(): number {\r\n        this.subscriptionStorage.add(this.userService.countSubscription(this.userService.idUser).subscribe((count: number) => {\r\n                this.count = count;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }));\r\n        return this.count;\r\n    }\r\n\r\n    // Changing page number\r\n    changePage(newPage: number) {\r\n        this.page = newPage;\r\n        this.selectedPage = this.page;\r\n        this.subscriptions = null;\r\n        this.userService.updateSubscriptions();\r\n    }\r\n\r\n    // Changing the number of items on the page\r\n    changePageSize(newSize: number) {\r\n        this.productPerPage = Number(newSize);\r\n        this.userService.updateSubscriptions();\r\n    }\r\n\r\n    // Calculating page number\r\n    get pageNumbers(): number[] {\r\n        return Array(Math.ceil(this.countProducts / this.productPerPage))\r\n            .fill(0).map((x, i) => i + 1);\r\n    }\r\n\r\n    getStatusSubscription(idS: number): string {\r\n        if (this.subscriptions[idS].status === true && this.user.blocked === false) {\r\n            return 'ON';\r\n        } else if (this.user.blocked === true) {\r\n            return 'Blocked';\r\n        } else {\r\n            return 'OFF';\r\n        }\r\n    }\r\n\r\n    getClassMap(): string {\r\n        return (this.user.blocked === true ? 'text-danger' :\r\n            'text-dark');\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptionStorage.unsubscribe();\r\n        clearInterval(this.idInterval);\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvdmlldy1hbGwtc3Vic2NyaXB0aW9ucy92aWV3LWFsbC1zdWJzY3JpcHRpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from \"rxjs\";\r\nimport {Subscriptions} from \"../../model/Subscriptions\";\r\nimport {UserService} from \"../../model/user.service\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-view-all-subscriptions',\r\n    templateUrl: './view-all-subscriptions.component.html',\r\n    styleUrls: ['./view-all-subscriptions.component.css']\r\n})\r\nexport class ViewAllSubscriptionsComponent implements OnInit, OnDestroy {\r\n\r\n    subscriptionStorage: Subscription = new Subscription();\r\n    subscriptions: Subscriptions[];\r\n    productPerPage = 10;\r\n    selectedPage = 1;\r\n    page = 1;\r\n    count: number;\r\n    error: boolean = false;\r\n\r\n\r\n    constructor(private userService: UserService) {}\r\n\r\n    ngOnInit() {\r\n        this.userService.updateSubscriptions();\r\n        this.subscriptionStorage.add(this.userService.countSubscription(0).subscribe((count: number) => {\r\n                this.count = count;\r\n            }, err => {\r\n                this.error = true;\r\n            }\r\n        ));\r\n\r\n    }\r\n\r\n    get products(): Subscriptions[] {\r\n\r\n        this.subscriptionStorage.add(this.userService.getUserSubscription(0,\r\n            (this.page - 1) * this.productPerPage,\r\n            this.productPerPage, \"\").subscribe((subscriptions: Subscriptions[]) => {\r\n                this.subscriptions = subscriptions;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }\r\n        ));\r\n        return this.subscriptions;\r\n    }\r\n\r\n    get countProducts(): number {\r\n        return this.count;\r\n    }\r\n\r\n    // Changing page number\r\n    changePage(newPage: number) {\r\n        this.page = newPage;\r\n        this.selectedPage = this.page;\r\n        this.subscriptions = null;\r\n        this.userService.updateSubscriptions();\r\n    }\r\n\r\n    get pageNumbers(): number[] {\r\n        return Array(Math.ceil(this.countProducts / this.productPerPage))\r\n            .fill(0).map((x, i) => i + 1);\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptionStorage.unsubscribe();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvdmlldy1zdWJzY3JpcHRpb24tYWRtaW4vdmlldy1zdWJzY3JpcHRpb24tYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {UserService} from '../../model/user.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Subscriptions} from '../../model/Subscriptions';\r\n\r\n\r\n@Component({\r\n    selector: 'app-view-subscription-admin',\r\n    templateUrl: './view-subscription-admin.component.html',\r\n    styleUrls: ['./view-subscription-admin.component.css']\r\n})\r\nexport class ViewSubscriptionAdminComponent implements OnInit, OnDestroy {\r\n\r\n    id: number;\r\n    subscriptionStorage: Subscription = new Subscription();\r\n    subscriptionsUser: Subscriptions[];\r\n    productPerPage = 10;\r\n    selectedPage = 1;\r\n    page = 1;\r\n    count: number;\r\n\r\n    error: boolean;\r\n\r\n    constructor(private userService: UserService,\r\n                private activatedRoute: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n        this.userService.updateSubscriptions();\r\n        this.subscriptionStorage.add(this.userService.countSubscription(0).subscribe((count: number) => {\r\n                this.count = count;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }));\r\n    }\r\n\r\n    get products() {\r\n        this.subscriptionStorage.add(this.userService.getUserSubscription(this.id,\r\n            (this.page - 1) * this.productPerPage,\r\n            this.productPerPage, \"\").subscribe((subscriptions: Subscriptions[]) => {\r\n                this.subscriptionsUser = subscriptions;\r\n            },\r\n            err => {\r\n                this.error = true;\r\n            }));\r\n        return this.subscriptionsUser;\r\n    }\r\n\r\n    // Pagination\r\n\r\n    get countProducts(): number {\r\n        return this.count;\r\n    }\r\n\r\n    // Changing page number\r\n    changePage(newPage: number) {\r\n        this.page = newPage;\r\n        this.selectedPage = this.page;\r\n        this.subscriptionsUser = null;\r\n        this.userService.updateSubscriptions();\r\n    }\r\n\r\n    get pageNumbers(): number[] {\r\n        return Array(Math.ceil(this.countProducts / this.productPerPage))\r\n            .fill(0).map((x, i) => i + 1);\r\n    }\r\n\r\n    changePageSize(newSize: number) {\r\n        this.productPerPage = Number(newSize);\r\n        this.userService.updateSubscriptions();\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptionStorage.unsubscribe();\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'dev1';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent,\r\n    HttpResponse, HttpUserEvent, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Interceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: sessionStorage.getItem('token')\r\n                }\r\n            })\r\n        }\r\n        return next.handle(req);\r\n    }\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {AppComponent} from './app.component';\r\nimport {AccountModule} from './account/account.module';\r\nimport {AuthorizationComponent} from './account/authorization/authorization.component';\r\nimport {AdminComponent} from './account/admin/admin.component';\r\nimport {BillingaccountComponent} from './account/billingaccount/billingaccount.component';\r\nimport {SubscriptionComponent} from './account/subscription/subscription.component';\r\nimport {InformationComponent} from './account/information/information.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ViewSubscriptionAdminComponent} from './account/view-subscription-admin/view-subscription-admin.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {ChargingFirstGuard} from './chargingFirst.guard';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {HttpService} from './HttpService';\r\nimport {ViewAllSubscriptionsComponent} from \"./account/view-all-subscriptions/view-all-subscriptions.component\";\r\nimport {TextMaskModule} from \"angular2-text-mask\";\r\nimport {Interceptor} from \"./app.interceptor\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    AccountModule,\r\n    TextMaskModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path: 'account', component: InformationComponent,\r\n        canActivate: [ChargingFirstGuard]\r\n      },\r\n      {\r\n        path: 'billingaccount', component: BillingaccountComponent,\r\n        canActivate: [ChargingFirstGuard]\r\n      },\r\n      {path: 'admin', component: AdminComponent, canActivate: [ChargingFirstGuard]},\r\n      {path: 'authorization', component: AuthorizationComponent, canActivate: [ChargingFirstGuard]},\r\n      {path: 'products/:id', component: ViewSubscriptionAdminComponent, canActivate: [ChargingFirstGuard]},\r\n      {path: 'allsubscriptions', component: ViewAllSubscriptionsComponent},\r\n      {path: '**', redirectTo: '/authorization', canActivate: [ChargingFirstGuard]},\r\n\r\n    ]),\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [AppComponent],\r\n  providers: [ChargingFirstGuard, HttpService, {\r\n    provide: HTTP_INTERCEPTORS, useClass: Interceptor, multi: true\r\n\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\r\nimport {AuthorizationComponent} from './account/authorization/authorization.component';\r\n\r\n@Injectable()\r\nexport class ChargingFirstGuard {\r\n  private firstNavigation = true;\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean {\r\n    if (this.firstNavigation) {\r\n      this.firstNavigation = false;\r\n      if (route.component !== AuthorizationComponent) {\r\n        this.router.navigateByUrl('/');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","export class Subscriptions {\r\n  id: number;\r\n  name: string;\r\n  status: boolean;\r\n  cost: number;\r\n  period: number;\r\n}\r\n","import {Subscriptions} from './Subscriptions';\r\nimport {BillingAccounts} from \"./BillingAccounts\";\r\n\r\nexport class Users {\r\n    public id: number;\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public balance: string;\r\n    public blocked: boolean;\r\n    public login: string;\r\n    public email: string;\r\n    public password;\r\n    public numberCard = '';\r\n    public amountTransfer: number;\r\n    public subscriptions: Subscriptions[];\r\n    public billingAccounts: BillingAccounts[];\r\n    public admin: boolean;\r\n\r\n    constructor(firstName: string, lastName: string, login: string, password: string, numberCard: string, email: string) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.login = login;\r\n        this.password = password;\r\n        this.numberCard = numberCard;\r\n        this.email = email;\r\n\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {UserService} from './user.service';\r\n\r\n\r\n@NgModule({\r\n  providers: [UserService],\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ModelModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, ReplaySubject, Subject, Subscription, throwError} from 'rxjs';\r\nimport {Users} from './Users';\r\nimport {HttpService} from '../HttpService';\r\nimport {Subscriptions} from './Subscriptions';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    private users: Subject<Users[]>;\r\n    private user: Subject<Users>;\r\n    private subscription: Subject<Subscriptions[]>;\r\n\r\n    private count: Subject<number>;\r\n    private subsID: Subject<number>;\r\n    private transfer: Subject<number>;\r\n\r\n    private userStorage: Subscription = new Subscription();\r\n\r\n    // ID authorized User\r\n    public idUser: number;\r\n\r\n    private updateUsers = true;\r\n    private updateUserID = true;\r\n    private updateSubscription = true;\r\n    private updateCount = true;\r\n    private updateCountUsers = true;\r\n\r\n    constructor(private http: HttpService, private httpClient: HttpClient, private router: Router) {\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////\r\n    // Get all users for admin\r\n    public getUsers(offset: number, limit: number): Observable<Users[]> {\r\n        if (this.updateUsers) {\r\n            this.users = new ReplaySubject(1);\r\n            this.http.get('http://localhost:8080/api/users?offset=' + offset + '&limit=' + limit)\r\n                .subscribe((users: Users[]) => {\r\n                        this.users.next(users);\r\n                    },\r\n                    err => {\r\n                        this.users.error(err);\r\n                    });\r\n        }\r\n\r\n        this.updateUsers = false;\r\n        return this.users.asObservable();\r\n    }\r\n\r\n    // Get user_ID (User Account)\r\n    public getUser(id: number): Observable<Users> {\r\n        this.user = new ReplaySubject(1);\r\n        if (this.updateUserID) {\r\n            this.userStorage = this.http.get('http://localhost:8080/api/users/' + id)\r\n                .subscribe((user: Users) => {\r\n                        this.user.next(user);\r\n                    },\r\n                    err => {\r\n                        this.user.error(err);\r\n                    });\r\n        }\r\n        this.updateUserID = false;\r\n        return this.user.asObservable();\r\n\r\n    }\r\n\r\n    public getUserSubscription(id: number, offset: number, limit: number, name: String): Observable<Subscriptions[]> {\r\n        if (this.updateSubscription) {\r\n            this.subscription = new ReplaySubject(1);\r\n            this.http.get('http://localhost:8080/api/users/' + id + '/products?offset=' + offset + '&limit=' + limit +\r\n                '&name=' + name)\r\n                .subscribe((subscription: Subscriptions[]) => {\r\n                        this.subscription.next(subscription);\r\n                    },\r\n                    err => {\r\n                        this.subscription.error(err);\r\n                    })\r\n        }\r\n        //this.idUser = id;\r\n        this.updateSubscription = false;\r\n\r\n        return this.subscription.asObservable();\r\n    }\r\n\r\n    public countUsers(): Observable<number> {\r\n        if (this.updateCountUsers) {\r\n            this.count = new ReplaySubject(1);\r\n            this.httpClient.get<number>('http://localhost:8080/api/users/count').subscribe(\r\n                (count: number) => {\r\n                    this.count.next(count);\r\n                },\r\n                err => {\r\n                    this.count.error(err);\r\n                });\r\n        }\r\n        this.updateCountUsers = false;\r\n        return this.count.asObservable();\r\n    }\r\n\r\n    public countSubscription(id: number): Observable<number> {\r\n        if (this.updateCount) {\r\n            this.subsID = new ReplaySubject(1);\r\n            this.httpClient.get<number>('http://localhost:8080/api/users/' + id + '/products/count').subscribe(\r\n                (count: number) => {\r\n                    this.subsID.next(count);\r\n                },\r\n                err => {\r\n                    this.subscription.error(err);\r\n                });\r\n        }\r\n        this.updateCount = false;\r\n        return this.subsID.asObservable();\r\n    }\r\n\r\n    // id = -1 failed authorization\r\n    public authorizationUser(user: Users): Observable<number> {\r\n\r\n        this.subsID = new ReplaySubject(1);\r\n        this.httpClient.get<number>('http://localhost:8080/api/users/login/' +  user.login).subscribe(\r\n            (id: number) => {\r\n                this.idUser = id;\r\n                this.subsID.next(id);\r\n            }, err => {\r\n                this.subsID.error(err);\r\n            });\r\n\r\n        this.updateUser();\r\n        this.updateSubscriptions();\r\n\r\n        return this.subsID.asObservable();\r\n    }\r\n\r\n    public registerUser(user: Users): Observable<number> {\r\n        this.subsID = new ReplaySubject(1);\r\n        this.httpClient.post<number>('http://localhost:8080/api/users/up', user).subscribe(\r\n            (id: number) => {\r\n                this.idUser = id;\r\n                this.subsID.next(id);\r\n            },\r\n            err => {\r\n                this.subsID.error(err);\r\n            });\r\n\r\n        this.updateUser();\r\n        this.updateSubscriptions();\r\n\r\n        return this.subsID.asObservable();\r\n    }\r\n\r\n    public transferMoney(user: Users, id: number): Observable<number> {\r\n        this.transfer = new ReplaySubject(1);\r\n\r\n        this.httpClient.post<number>('http://localhost:8080/api/users/billing/' + id, user).subscribe(\r\n            (transfer: number) => {\r\n                this.transfer.next(transfer);\r\n            },\r\n            err => {\r\n                this.transfer.error(err);\r\n            });\r\n        return this.transfer.asObservable();\r\n    }\r\n\r\n    // Modify information on user_ID (E_wallet, Blocked user)\r\n    public modifyUser(id: number, user: Users): void {\r\n        this.httpClient.put<Users>('http://localhost:8080/api/users/' + id, user).subscribe();\r\n    }\r\n\r\n\r\n    // ON/OFF user Subscription_id\r\n    public modifyUserSubscription(subscription: Subscriptions): void {\r\n        this.httpClient.post('http://localhost:8080/api/users/' + this.idUser + '/product', subscription)\r\n            .subscribe();\r\n    }\r\n\r\n    // ON/OFF subscription user_ID\r\n    public addSubscription(name: string, cost: number): void {\r\n        const newSubscription: Subscriptions = new Subscriptions();\r\n        newSubscription.name = name;\r\n        newSubscription.cost = cost;\r\n        this.httpClient.post<Subscriptions>('http://localhost:8080/api/users/products', newSubscription)\r\n            .subscribe();\r\n        this.updateSubscriptions();\r\n    }\r\n\r\n\r\n    // Modify information on user_ID (E_wallet, Blocked user)\r\n    public managementAdmin(id: number, status: boolean): void {\r\n        this.httpClient.put('http://localhost:8080/api/users/' + id + '/admins', status).subscribe();\r\n    }\r\n\r\n\r\n    public updateUser(): void {\r\n        this.updateUsers = true;\r\n        this.updateUserID = true;\r\n        this.updateCountUsers = true;\r\n    }\r\n\r\n    // Update Subscription\r\n    public updateSubscriptions(): void {\r\n        this.updateSubscription = true;\r\n        this.updateCount = true;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}