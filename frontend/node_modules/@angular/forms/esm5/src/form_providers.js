/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { InternalFormsSharedModule, NG_FORM_SELECTOR_WARNING, NG_MODEL_WITH_FORM_CONTROL_WARNING, REACTIVE_DRIVEN_DIRECTIVES, TEMPLATE_DRIVEN_DIRECTIVES } from './directives';
import { RadioControlRegistry } from './directives/radio_control_value_accessor';
import { FormBuilder } from './form_builder';
/**
 * Exports the required providers and directives for template-driven forms,
 * making them available for import by NgModules that import this module.
 *
 * @see [Forms Guide](/guide/forms)
 *
 * @publicApi
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './directives/ng_model';
import * as ɵngcc2 from './directives/ng_model_group';
import * as ɵngcc3 from './directives/ng_form';
import * as ɵngcc4 from './directives/ng_form_selector_warning';
import * as ɵngcc5 from './directives/reactive_directives/form_control_directive';
import * as ɵngcc6 from './directives/reactive_directives/form_group_directive';
import * as ɵngcc7 from './directives/reactive_directives/form_control_name';
import * as ɵngcc8 from './directives/reactive_directives/form_group_name';
var FormsModule = /** @class */ (function () {
    function FormsModule() {
    }
    FormsModule_1 = FormsModule;
    /**
     * @description
     * Provides options for configuring the template-driven forms module.
     *
     * @param opts An object of configuration options
     * * `warnOnDeprecatedNgFormSelector` Configures when to emit a warning when the deprecated
     * `ngForm` selector is used.
     */
    FormsModule.withConfig = function (opts) {
        return {
            ngModule: FormsModule_1,
            providers: [{ provide: NG_FORM_SELECTOR_WARNING, useValue: opts.warnOnDeprecatedNgFormSelector }]
        };
    };
    var FormsModule_1;
FormsModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: function () { return [ɵngcc1.NgModel, ɵngcc2.NgModelGroup, ɵngcc3.NgForm, ɵngcc4.NgFormSelectorWarning]; }, exports: function () { return [InternalFormsSharedModule, ɵngcc1.NgModel, ɵngcc2.NgModelGroup, ɵngcc3.NgForm, ɵngcc4.NgFormSelectorWarning]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(FormsModule, [{
        type: NgModule,
        args: [{
                declarations: TEMPLATE_DRIVEN_DIRECTIVES,
                providers: [RadioControlRegistry],
                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]
            }]
    }], function () { return []; }, null);
FormsModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [InternalFormsSharedModule] });
    return FormsModule;
}());
export { FormsModule };
/**
 * Exports the required infrastructure and directives for reactive forms,
 * making them available for import by NgModules that import this module.
 * @see [Forms](guide/reactive-forms)
 *
 * @see [Reactive Forms Guide](/guide/reactive-forms)
 *
 * @publicApi
 */
var ReactiveFormsModule = /** @class */ (function () {
    function ReactiveFormsModule() {
    }
    ReactiveFormsModule_1 = ReactiveFormsModule;
    /**
     * @description
     * Provides options for configuring the reactive forms module.
     *
     * @param opts An object of configuration options
     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`
     * binding is used with reactive form directives.
     */
    ReactiveFormsModule.withConfig = function (opts) {
        return {
            ngModule: ReactiveFormsModule_1,
            providers: [{
                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,
                    useValue: opts.warnOnNgModelWithFormControl
                }]
        };
    };
    var ReactiveFormsModule_1;
ReactiveFormsModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: function () { return [ɵngcc5.FormControlDirective, ɵngcc6.FormGroupDirective, ɵngcc7.FormControlName, ɵngcc8.FormGroupName, ɵngcc8.FormArrayName]; }, exports: function () { return [InternalFormsSharedModule, ɵngcc5.FormControlDirective, ɵngcc6.FormGroupDirective, ɵngcc7.FormControlName, ɵngcc8.FormGroupName, ɵngcc8.FormArrayName]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{
        type: NgModule,
        args: [{
                declarations: [REACTIVE_DRIVEN_DIRECTIVES],
                providers: [FormBuilder, RadioControlRegistry],
                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]
            }]
    }], function () { return []; }, null);
ReactiveFormsModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [InternalFormsSharedModule] });
    return ReactiveFormsModule;
}());
export { ReactiveFormsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L1Byb2plY3RzL1Rlc3RQcm9qZWN0L0NoYXJnaW5nL0NoYXJnaW5nL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYW5ndWxhci9mb3Jtcy9lc201L3NyYy9mb3JtX3Byb3ZpZGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkE7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQkFrQnNCOzs7Ozs7Ozs7OztnTkFPRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFrQ1U7Ozs7Ozs7Ozs7O3FQQU9GIiwiZmlsZSI6ImZvcm1fcHJvdmlkZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4gKlxyXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxyXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJbnRlcm5hbEZvcm1zU2hhcmVkTW9kdWxlLCBOR19GT1JNX1NFTEVDVE9SX1dBUk5JTkcsIE5HX01PREVMX1dJVEhfRk9STV9DT05UUk9MX1dBUk5JTkcsIFJFQUNUSVZFX0RSSVZFTl9ESVJFQ1RJVkVTLCBURU1QTEFURV9EUklWRU5fRElSRUNUSVZFUyB9IGZyb20gJy4vZGlyZWN0aXZlcyc7XHJcbmltcG9ydCB7IFJhZGlvQ29udHJvbFJlZ2lzdHJ5IH0gZnJvbSAnLi9kaXJlY3RpdmVzL3JhZGlvX2NvbnRyb2xfdmFsdWVfYWNjZXNzb3InO1xyXG5pbXBvcnQgeyBGb3JtQnVpbGRlciB9IGZyb20gJy4vZm9ybV9idWlsZGVyJztcclxuLyoqXHJcbiAqIEV4cG9ydHMgdGhlIHJlcXVpcmVkIHByb3ZpZGVycyBhbmQgZGlyZWN0aXZlcyBmb3IgdGVtcGxhdGUtZHJpdmVuIGZvcm1zLFxyXG4gKiBtYWtpbmcgdGhlbSBhdmFpbGFibGUgZm9yIGltcG9ydCBieSBOZ01vZHVsZXMgdGhhdCBpbXBvcnQgdGhpcyBtb2R1bGUuXHJcbiAqXHJcbiAqIEBzZWUgW0Zvcm1zIEd1aWRlXSgvZ3VpZGUvZm9ybXMpXHJcbiAqXHJcbiAqIEBwdWJsaWNBcGlcclxuICovXHJcbnZhciBGb3Jtc01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEZvcm1zTW9kdWxlKCkge1xyXG4gICAgfVxyXG4gICAgRm9ybXNNb2R1bGVfMSA9IEZvcm1zTW9kdWxlO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqIFByb3ZpZGVzIG9wdGlvbnMgZm9yIGNvbmZpZ3VyaW5nIHRoZSB0ZW1wbGF0ZS1kcml2ZW4gZm9ybXMgbW9kdWxlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRzIEFuIG9iamVjdCBvZiBjb25maWd1cmF0aW9uIG9wdGlvbnNcclxuICAgICAqICogYHdhcm5PbkRlcHJlY2F0ZWROZ0Zvcm1TZWxlY3RvcmAgQ29uZmlndXJlcyB3aGVuIHRvIGVtaXQgYSB3YXJuaW5nIHdoZW4gdGhlIGRlcHJlY2F0ZWRcclxuICAgICAqIGBuZ0Zvcm1gIHNlbGVjdG9yIGlzIHVzZWQuXHJcbiAgICAgKi9cclxuICAgIEZvcm1zTW9kdWxlLndpdGhDb25maWcgPSBmdW5jdGlvbiAob3B0cykge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBGb3Jtc01vZHVsZV8xLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5HX0ZPUk1fU0VMRUNUT1JfV0FSTklORywgdXNlVmFsdWU6IG9wdHMud2Fybk9uRGVwcmVjYXRlZE5nRm9ybVNlbGVjdG9yIH1dXHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbiAgICB2YXIgRm9ybXNNb2R1bGVfMTtcclxuICAgIEZvcm1zTW9kdWxlID0gRm9ybXNNb2R1bGVfMSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgTmdNb2R1bGUoe1xyXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFRFTVBMQVRFX0RSSVZFTl9ESVJFQ1RJVkVTLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtSYWRpb0NvbnRyb2xSZWdpc3RyeV0sXHJcbiAgICAgICAgICAgIGV4cG9ydHM6IFtJbnRlcm5hbEZvcm1zU2hhcmVkTW9kdWxlLCBURU1QTEFURV9EUklWRU5fRElSRUNUSVZFU11cclxuICAgICAgICB9KVxyXG4gICAgXSwgRm9ybXNNb2R1bGUpO1xyXG4gICAgcmV0dXJuIEZvcm1zTW9kdWxlO1xyXG59KCkpO1xyXG5leHBvcnQgeyBGb3Jtc01vZHVsZSB9O1xyXG4vKipcclxuICogRXhwb3J0cyB0aGUgcmVxdWlyZWQgaW5mcmFzdHJ1Y3R1cmUgYW5kIGRpcmVjdGl2ZXMgZm9yIHJlYWN0aXZlIGZvcm1zLFxyXG4gKiBtYWtpbmcgdGhlbSBhdmFpbGFibGUgZm9yIGltcG9ydCBieSBOZ01vZHVsZXMgdGhhdCBpbXBvcnQgdGhpcyBtb2R1bGUuXHJcbiAqIEBzZWUgW0Zvcm1zXShndWlkZS9yZWFjdGl2ZS1mb3JtcylcclxuICpcclxuICogQHNlZSBbUmVhY3RpdmUgRm9ybXMgR3VpZGVdKC9ndWlkZS9yZWFjdGl2ZS1mb3JtcylcclxuICpcclxuICogQHB1YmxpY0FwaVxyXG4gKi9cclxudmFyIFJlYWN0aXZlRm9ybXNNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBSZWFjdGl2ZUZvcm1zTW9kdWxlKCkge1xyXG4gICAgfVxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZV8xID0gUmVhY3RpdmVGb3Jtc01vZHVsZTtcclxuICAgIC8qKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKiBQcm92aWRlcyBvcHRpb25zIGZvciBjb25maWd1cmluZyB0aGUgcmVhY3RpdmUgZm9ybXMgbW9kdWxlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRzIEFuIG9iamVjdCBvZiBjb25maWd1cmF0aW9uIG9wdGlvbnNcclxuICAgICAqICogYHdhcm5Pbk5nTW9kZWxXaXRoRm9ybUNvbnRyb2xgIENvbmZpZ3VyZXMgd2hlbiB0byBlbWl0IGEgd2FybmluZyB3aGVuIGFuIGBuZ01vZGVsYFxyXG4gICAgICogYmluZGluZyBpcyB1c2VkIHdpdGggcmVhY3RpdmUgZm9ybSBkaXJlY3RpdmVzLlxyXG4gICAgICovXHJcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLndpdGhDb25maWcgPSBmdW5jdGlvbiAob3B0cykge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBSZWFjdGl2ZUZvcm1zTW9kdWxlXzEsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW3tcclxuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBOR19NT0RFTF9XSVRIX0ZPUk1fQ09OVFJPTF9XQVJOSU5HLFxyXG4gICAgICAgICAgICAgICAgICAgIHVzZVZhbHVlOiBvcHRzLndhcm5Pbk5nTW9kZWxXaXRoRm9ybUNvbnRyb2xcclxuICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbiAgICB2YXIgUmVhY3RpdmVGb3Jtc01vZHVsZV8xO1xyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSA9IFJlYWN0aXZlRm9ybXNNb2R1bGVfMSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgTmdNb2R1bGUoe1xyXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtSRUFDVElWRV9EUklWRU5fRElSRUNUSVZFU10sXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW0Zvcm1CdWlsZGVyLCBSYWRpb0NvbnRyb2xSZWdpc3RyeV0sXHJcbiAgICAgICAgICAgIGV4cG9ydHM6IFtJbnRlcm5hbEZvcm1zU2hhcmVkTW9kdWxlLCBSRUFDVElWRV9EUklWRU5fRElSRUNUSVZFU11cclxuICAgICAgICB9KVxyXG4gICAgXSwgUmVhY3RpdmVGb3Jtc01vZHVsZSk7XHJcbiAgICByZXR1cm4gUmVhY3RpdmVGb3Jtc01vZHVsZTtcclxufSgpKTtcclxuZXhwb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9O1xyIl19